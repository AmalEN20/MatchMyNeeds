{"ast":null,"code":"import { gql } from '@apollo/client';\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const ADD_REQUEST = gql`\n  mutation addRequest($requestItem: String!, $requestDescription: String!, $location: String!) {\n    addRequest(requestItem: $requestItem, requestDescription:  $requestDescription, location: $location) {\n      _id\n      requestItem\n      requestDescription\n      location\n      requestBy\n      postedOn\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      profile {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const UPDATE_REQUEST = gql`\n  mutation updateRequest($requestId: String!) {\n    updateRequest(requestId: $requestId) {\n      _id\n      requestItem\n      requestDescription\n      location\n    }\n  }\n`;\nexport const REMOVE_REQUEST = gql`\n  mutation removeRequest($requestId: String!) {\n    removeRequest(requestId: $requestId) {\n      _id\n    }\n  }\n`;\nexport const ADD_COMMENT = gql`\n  mutation addComment($requestId: String!, $commentText: String!) {\n    addComment(requestId: $requestId, commentText: $commentText) {\n      _id\n      requestItem\n      requestDescription\n      location\n      requestBy\n      postedOn\n      comments {\n        _id\n        commentText\n        commentBy\n        postedOn\n      }\n    }\n  }\n`;\nexport const UPDATE_COMMENT = gql`\n  mutation updateComment($commentId: String!, $commentText: String!) {\n    updateComment(commentId: $commentId, commentText: $commentText) {\n      _id\n      requestItem\n      requestDescription\n      location\n      requestBy\n      postedOn\n      comments {\n        _id\n        commentText\n        commentBy\n        postedOn\n      }\n    }\n  }\n`;\nexport const REMOVE_COMMENT = gql`\n  mutation removeComment($commentId: String!) {\n    removeComment(commentId: $commentId) {\n      _id\n    }\n  }\n`;","map":{"version":3,"names":["gql","ADD_USER","ADD_REQUEST","LOGIN_USER","UPDATE_REQUEST","REMOVE_REQUEST","ADD_COMMENT","UPDATE_COMMENT","REMOVE_COMMENT"],"sources":["/Users/kristinaalabastro/bootcamp/projects bootcamp/MatchMyNeeds/client/src/utils/mutations.js"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_REQUEST = gql`\n  mutation addRequest($requestItem: String!, $requestDescription: String!, $location: String!) {\n    addRequest(requestItem: $requestItem, requestDescription:  $requestDescription, location: $location) {\n      _id\n      requestItem\n      requestDescription\n      location\n      requestBy\n      postedOn\n      comments {\n        _id\n        commentText\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      profile {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const UPDATE_REQUEST = gql`\n  mutation updateRequest($requestId: String!) {\n    updateRequest(requestId: $requestId) {\n      _id\n      requestItem\n      requestDescription\n      location\n    }\n  }\n`;\n\nexport const REMOVE_REQUEST = gql`\n  mutation removeRequest($requestId: String!) {\n    removeRequest(requestId: $requestId) {\n      _id\n    }\n  }\n`;\n\nexport const ADD_COMMENT = gql`\n  mutation addComment($requestId: String!, $commentText: String!) {\n    addComment(requestId: $requestId, commentText: $commentText) {\n      _id\n      requestItem\n      requestDescription\n      location\n      requestBy\n      postedOn\n      comments {\n        _id\n        commentText\n        commentBy\n        postedOn\n      }\n    }\n  }\n`;\n\nexport const UPDATE_COMMENT = gql`\n  mutation updateComment($commentId: String!, $commentText: String!) {\n    updateComment(commentId: $commentId, commentText: $commentText) {\n      _id\n      requestItem\n      requestDescription\n      location\n      requestBy\n      postedOn\n      comments {\n        _id\n        commentText\n        commentBy\n        postedOn\n      }\n    }\n  }\n`;\n\nexport const REMOVE_COMMENT = gql`\n  mutation removeComment($commentId: String!) {\n    removeComment(commentId: $commentId) {\n      _id\n    }\n  }\n`;"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,QAAQ,GAAGD,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAME,WAAW,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGH,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMI,cAAc,GAAGJ,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMK,cAAc,GAAGL,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMM,WAAW,GAAGN,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMO,cAAc,GAAGP,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAGR,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}