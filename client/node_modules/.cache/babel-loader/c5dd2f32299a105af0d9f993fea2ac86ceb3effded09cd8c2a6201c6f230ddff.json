{"ast":null,"code":"var _jsxFileName = \"/Users/kristinaalabastro/bootcamp/projects bootcamp/MatchMyNeeds/client/src/pages/MyToDos.js\",\n  _s = $RefreshSig$();\n// 2 columns: My to do list vs history\n\nimport React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport PostedRequest from '../components/PostedRequest';\nimport RequestForm from '../components/RequestForm';\nimport { QUERY_SINGLE_REQUEST, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  var _profile, _profile$skills;\n  const {\n    UserId\n  } = useParams();\n\n  // If there is no `userId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const {\n    loading,\n    data\n  } = useQuery(userId ? QUERY_SINGLE_REQUEST : QUERY_ME, {\n    variables: {\n      userId: userId\n    }\n  });\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const user = (data === null || data === void 0 ? void 0 : data.me) || (data === null || data === void 0 ? void 0 : data.profile) || {};\n\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  if (!((_profile = profile) !== null && _profile !== void 0 && _profile.name)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"You need to be logged in to see your profile page. Use the navigation links above to sign up or log in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-header\",\n      children: [profileId ? `${profile.name}'s` : 'Your', \" friends have endorsed these skills...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), ((_profile$skills = profile.skills) === null || _profile$skills === void 0 ? void 0 : _profile$skills.length) > 0 && /*#__PURE__*/_jsxDEV(PostedRequest, {\n      skills: profile.skills,\n      isLoggedInUser: !profileId && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4 p-4\",\n      style: {\n        border: '1px dotted #1a1a1a'\n      },\n      children: /*#__PURE__*/_jsxDEV(RequestForm, {\n        profileId: profile._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(User, \"PbGmk+T9Fib5chXl7U/BqbfJMZk=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = User;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","Navigate","useParams","useQuery","PostedRequest","RequestForm","QUERY_SINGLE_REQUEST","QUERY_ME","Auth","jsxDEV","_jsxDEV","User","_s","_profile","_profile$skills","UserId","loading","data","userId","variables","user","me","profile","loggedIn","getProfile","_id","profileId","to","fileName","_jsxFileName","lineNumber","columnNumber","children","name","className","skills","length","isLoggedInUser","style","border","_c","Profile","$RefreshReg$"],"sources":["/Users/kristinaalabastro/bootcamp/projects bootcamp/MatchMyNeeds/client/src/pages/MyToDos.js"],"sourcesContent":["// 2 columns: My to do list vs history\n\nimport React from 'react';\n\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport PostedRequest from '../components/PostedRequest';\nimport RequestForm from '../components/RequestForm';\n\nimport { QUERY_SINGLE_REQUEST, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst User = () => {\n  const { UserId } = useParams();\n\n  // If there is no `userId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    userId ? QUERY_SINGLE_REQUEST : QUERY_ME,\n    {\n      variables: { userId: userId },\n    }\n  );\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const user = data?.me || data?.profile || {};\n\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!profile?.name) {\n    return (\n      <h4>\n        You need to be logged in to see your profile page. Use the navigation\n        links above to sign up or log in!\n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"card-header\">\n        {profileId ? `${profile.name}'s` : 'Your'} friends have endorsed these\n        skills...\n      </h2>\n\n      {profile.skills?.length > 0 && (\n        <PostedRequest\n          skills={profile.skills}\n          isLoggedInUser={!profileId && true}\n        />\n      )}\n\n      <div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <RequestForm profileId={profile._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}