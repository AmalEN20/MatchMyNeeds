{"ast":null,"code":"var _jsxFileName = \"/Users/kristinaalabastro/bootcamp/projects bootcamp/MatchMyNeeds/client/src/components/NavTabs/index.js\";\nimport React from \"react\";\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavTabs(_ref) {\n  let {\n    currentPage,\n    handlePageChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MatchMyNeeds\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"nav nav-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#ToDoList\",\n          onClick: () => handlePageChange(\"ToDoList\")\n          // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n          // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n          ,\n          className: currentPage === \"ToDoList\" ? \"nav-link active\" : \"nav-link\",\n          children: \"To Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#MyRequests\",\n          onClick: () => handlePageChange(\"MyRequests\")\n          // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === \"MyRequests\" ? \"nav-link active\" : \"nav-link\",\n          children: \"My Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"nav-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#HomePage\",\n          onClick: () => handlePageChange(\"HomePage\")\n          // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n          ,\n          className: currentPage === \"HomePage\" ? \"nav-link active\" : \"nav-link\",\n          children: \"Home Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = NavTabs;\nexport default NavTabs;\nvar _c;\n$RefreshReg$(_c, \"NavTabs\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NavTabs","_ref","currentPage","handlePageChange","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","onClick","_c","$RefreshReg$"],"sources":["/Users/kristinaalabastro/bootcamp/projects bootcamp/MatchMyNeeds/client/src/components/NavTabs/index.js"],"sourcesContent":["import React from \"react\";\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\nfunction NavTabs({ currentPage, handlePageChange }) {\n  return (\n    <header>\n      <h1>MatchMyNeeds</h1>\n      <ul className=\"nav nav-tabs\">\n        <li className=\"nav-item\">\n          <a\n            href=\"#ToDoList\"\n            onClick={() => handlePageChange(\"ToDoList\")}\n            // This is a conditional (ternary) operator that checks to see if the current page is \"Home\"\n            // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n            className={\n              currentPage === \"ToDoList\" ? \"nav-link active\" : \"nav-link\"\n            }\n          >\n            To Do List\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#MyRequests\"\n            onClick={() => handlePageChange(\"MyRequests\")}\n            // Check to see if the currentPage is `About`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={\n              currentPage === \"MyRequests\" ? \"nav-link active\" : \"nav-link\"\n            }\n          >\n            My Requests\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#HomePage\"\n            onClick={() => handlePageChange(\"HomePage\")}\n            // Check to see if the currentPage is `Blog`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n            className={\n              currentPage === \"HomePage\" ? \"nav-link active\" : \"nav-link\"\n            }\n          >\n            Home Page\n          </a>\n        </li>\n      </ul>\n    </header>\n  );\n}\n\nexport default NavTabs;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,OAAOA,CAAAC,IAAA,EAAoC;EAAA,IAAnC;IAAEC,WAAW;IAAEC;EAAiB,CAAC,GAAAF,IAAA;EAChD,oBACEF,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrBT,OAAA;MAAIU,SAAS,EAAC,cAAc;MAAAL,QAAA,gBAC1BL,OAAA;QAAIU,SAAS,EAAC,UAAU;QAAAL,QAAA,eACtBL,OAAA;UACEW,IAAI,EAAC,WAAW;UAChBC,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAAC,UAAU;UAC1C;UACA;UAAA;UACAM,SAAS,EACPP,WAAW,KAAK,UAAU,GAAG,iBAAiB,GAAG,UAClD;UAAAE,QAAA,EACF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD,eACLT,OAAA;QAAIU,SAAS,EAAC,UAAU;QAAAL,QAAA,eACtBL,OAAA;UACEW,IAAI,EAAC,aAAa;UAClBC,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAAC,YAAY;UAC5C;UAAA;UACAM,SAAS,EACPP,WAAW,KAAK,YAAY,GAAG,iBAAiB,GAAG,UACpD;UAAAE,QAAA,EACF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD,eACLT,OAAA;QAAIU,SAAS,EAAC,UAAU;QAAAL,QAAA,eACtBL,OAAA;UACEW,IAAI,EAAC,WAAW;UAChBC,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAAC,UAAU;UAC1C;UAAA;UACAM,SAAS,EACPP,WAAW,KAAK,UAAU,GAAG,iBAAiB,GAAG,UAClD;UAAAE,QAAA,EACF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEb;AAACI,EAAA,GA7CQZ,OAAO;AA+ChB,eAAeA,OAAO;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}